import type { CanvasComponent } from "../types/canvas";

/**
 * COMPREHENSIVE SYSTEM DESIGN COMPONENTS LIBRARY
 * Organized by architectural layers for scalable distributed systems
 * Last reviewed: Solution Architect Review
 */

export const COMPONENTS: CanvasComponent[] = [
  // ========================================
  // FRONTEND LAYER
  // ========================================
  {
    id: "web-app",
    group: "Frontend",
    icon: "üíª",
    label: "Web App",
    description: "Browser-based client",
    tags: ["browser", "client", "frontend", "spa", "pwa", "web application"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        default: "Web App",
        placeholder: "Enter component name",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "framework",
        label: "Framework",
        type: "select",
        default: "React",
        options: ["React", "Vue", "Angular", "Svelte"],
      },
      { key: "instances", label: "Instances", type: "number", default: 3 },
      {
        key: "cdn",
        label: "CDN Enabled",
        type: "boolean",
        default: true,
      },
      {
        key: "ssl",
        label: "SSL Enabled",
        type: "boolean",
        default: true,
      },
      {
        key: "staticAssets",
        label: "Static Assets (GB)",
        type: "number",
        default: 50,
      },
      {
        key: "logic",
        label: "Component Logic (Pseudo Code)",
        type: "textarea",
        placeholder: "submit -> validate -> call API -> show response",
        default: "",
      },
    ],
  },
  {
    id: "mobile-app",
    group: "Frontend",
    icon: "üì±",
    label: "Mobile App",
    description: "iOS/Android client",
    tags: ["ios", "android", "mobile", "app", "native", "react native", "flutter"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        default: "Mobile App",
        placeholder: "Enter component name",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        default: "",
        placeholder: "A brief description",
      },
      {
        key: "stack",
        label: "Tech Stack",
        type: "select",
        default: "React Native",
        options: ["React Native", "Flutter", "Swift/Kotlin"],
      },
      {
        key: "pushNotifications",
        label: "Push Notifications",
        type: "boolean",
        default: true,
      },
      {
        key: "offlineSupport",
        label: "Offline Support",
        type: "boolean",
        default: true,
      },
      {
        key: "sessions",
        label: "Active Sessions (k)",
        type: "number",
        default: 10,
      },
    ],
  },
  {
    id: "desktop-app",
    group: "Frontend",
    icon: "üñ•Ô∏è",
    label: "Desktop App",
    description: "Native / Electron client",
    tags: ["desktop", "electron", "tauri", "native", "windows", "mac", "linux"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        default: "Desktop App",
        placeholder: "Enter component name",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        default: "",
        placeholder: "A brief description",
      },
      {
        key: "runtime",
        label: "Runtime",
        type: "select",
        default: "Electron",
        options: ["Electron", "Tauri", "Native"],
      },
      {
        key: "autoUpdate",
        label: "Auto Update",
        type: "boolean",
        default: true,
      },
      {
        key: "bundledSizeMB",
        label: "Bundle Size (MB)",
        type: "number",
        default: 120,
      },
    ],
  },

  // Data Layer group
  {
    id: "database",
    group: "Data Layer",
    icon: "üóÑÔ∏è",
    label: "Database",
    description: "Relational/NoSQL data storage",
    tags: ["db", "rdbms", "nosql", "sql", "postgres", "mysql", "mongodb", "data", "storage", "persistence"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Database",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "type",
        label: "Database Type",
        type: "select",
        default: "RDBMS",
        options: ["RDBMS", "NoSQL", "NewSQL", "Time-Series", "Graph"],
      },
      {
        key: "engine",
        label: "Engine",
        type: "select",
        default: "postgresql",
        options: [
          "postgresql",
          "mysql",
          "mongodb",
          "cassandra",
          "dynamodb",
          "cockroachdb",
        ],
      },
      {
        key: "workload",
        label: "Workload Type",
        type: "select",
        default: "OLTP",
        options: ["OLTP", "OLAP", "Hybrid"],
      },
      {
        key: "storageGB",
        label: "Storage (GB)",
        type: "number",
        default: 100,
      },
      {
        key: "sharding",
        label: "Sharding Strategy",
        type: "select",
        default: "None",
        options: ["None", "Hash-based", "Range-based", "Geographic"],
      },
      {
        key: "shards",
        label: "Number of Shards",
        type: "number",
        default: 1,
      },
      {
        key: "replication",
        label: "Replication Factor",
        type: "number",
        default: 3,
      },
      {
        key: "replicationMode",
        label: "Replication Mode",
        type: "select",
        default: "Async",
        options: ["Sync", "Async", "Semi-Sync"],
      },
      {
        key: "multiAZ",
        label: "Multi-AZ",
        type: "boolean",
        default: true,
      },
      {
        key: "crossRegion",
        label: "Cross-Region Replication",
        type: "boolean",
        default: false,
      },
      {
        key: "backups",
        label: "Automatic Backups",
        type: "boolean",
        default: true,
      },
      {
        key: "pitr",
        label: "Point-in-Time Recovery",
        type: "boolean",
        default: true,
      },
      {
        key: "encryption",
        label: "Encryption at Rest",
        type: "boolean",
        default: true,
      },
      {
        key: "connectionPooling",
        label: "Connection Pooling",
        type: "boolean",
        default: true,
      },
      {
        key: "queryCache",
        label: "Query Cache Enabled",
        type: "boolean",
        default: true,
      },
      {
        key: "wal",
        label: "Write-Ahead Logging",
        type: "boolean",
        default: true,
      },
      {
        key: "rbac",
        label: "RBAC Enabled",
        type: "boolean",
        default: true,
      },
      {
        key: "auditLog",
        label: "Audit Trail",
        type: "boolean",
        default: true,
      },
    ],
  },
  {
    id: "loadbalancer",
    group: "Networking",
    icon: "‚öñÔ∏è",
    label: "Load Balancer",
    description: "Traffic distribution & high availability",
    tags: ["lb", "alb", "nlb", "elb", "traffic", "distribution", "nginx", "haproxy", "layer 4", "layer 7"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Load Balancer",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "type",
        label: "Type",
        type: "select",
        default: "Layer 7 (Application)",
        options: ["Layer 4 (Network)", "Layer 7 (Application)", "Global"],
      },
      {
        key: "algorithm",
        label: "Algorithm",
        type: "select",
        default: "round-robin",
        options: [
          "round-robin",
          "least-connections",
          "ip-hash",
          "weighted-round-robin",
          "least-response-time",
        ],
      },
      {
        key: "sslTermination",
        label: "SSL/TLS Termination",
        type: "boolean",
        default: true,
      },
      {
        key: "stickiness",
        label: "Session Stickiness",
        type: "boolean",
        default: false,
      },
      {
        key: "healthCheck",
        label: "Health Check",
        type: "boolean",
        default: true,
      },
      {
        key: "healthCheckInterval",
        label: "Health Check Interval (s)",
        type: "number",
        default: 30,
      },
      {
        key: "multiAZ",
        label: "Multi-AZ",
        type: "boolean",
        default: true,
      },
      {
        key: "accessLogs",
        label: "Access Logs",
        type: "boolean",
        default: true,
      },
      {
        key: "connectionDraining",
        label: "Connection Draining",
        type: "boolean",
        default: true,
      },
      {
        key: "ddosProtection",
        label: "DDoS Protection",
        type: "boolean",
        default: true,
      },
      {
        key: "waf",
        label: "WAF Enabled",
        type: "boolean",
        default: false,
      },
    ],
  },
  {
    id: "cache",
    group: "Data Layer",
    icon: "‚ö°",
    label: "Cache",
    description: "In-memory fast data access",
    tags: ["redis", "memcached", "in-memory", "caching", "performance", "speed"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Cache",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "engine",
        label: "Engine",
        type: "select",
        default: "redis",
        options: ["redis", "memcached", "hazelcast", "aerospike"],
      },
      {
        key: "cacheStrategy",
        label: "Cache Strategy",
        type: "select",
        default: "write-through",
        options: ["write-through", "write-around", "write-back", "cache-aside"],
      },
      {
        key: "ttl",
        label: "TTL (seconds)",
        type: "number",
        default: 3600,
      },
      {
        key: "inMemory",
        label: "In Memory",
        type: "boolean",
        default: true,
      },
      {
        key: "eviction",
        label: "Eviction Policy",
        type: "select",
        default: "lru",
        options: [
          "lru",
          "lfu",
          "fifo",
          "mru",
          "random",
          "ttl-based",
          "volatile-lru",
        ],
      },
      {
        key: "replication",
        label: "Replication",
        type: "boolean",
        default: true,
      },
      {
        key: "clusterMode",
        label: "Cluster Mode",
        type: "boolean",
        default: false,
      },
      {
        key: "persistence",
        label: "Persistence (AOF/RDB)",
        type: "boolean",
        default: false,
      },
      {
        key: "encryption",
        label: "Encryption in Transit",
        type: "boolean",
        default: true,
      },
      {
        key: "maxMemoryGB",
        label: "Max Memory (GB)",
        type: "number",
        default: 16,
      },
    ],
  },
  {
    id: "webserver",
    group: "Compute",
    icon: "üåê",
    label: "Web Server",
    description: "HTTP requests",
    tags: ["http", "server", "nginx", "apache", "web", "requests"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Web Server",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      { key: "instances", label: "Instances", type: "number", default: 2 },
      { key: "autoscale", label: "Autoscale", type: "boolean", default: true },
      {
        key: "instanceType",
        label: "Instance Type",
        type: "select",
        default: "t3.medium",
        options: ["t3.small", "t3.medium", "t3.large"],
      },
      { key: "gzip", label: "Gzip", type: "boolean", default: true },
      {
        key: "connectionTimeout",
        label: "Connection Timeout (s)",
        type: "number",
        default: 30,
      },
    ],
  },
  {
    id: "message-broker",
    group: "Messaging",
    icon: "üì®",
    label: "Message Broker",
    description: "Pub/Sub message broker",
    tags: ["kafka", "rabbitmq", "pubsub", "messaging", "broker", "queue", "mq"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Message Broker",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      { key: "partitions", label: "Partitions", type: "number", default: 6 },
      {
        key: "replication",
        label: "Replication Factor",
        type: "number",
        default: 3,
      },
      {
        key: "durable",
        label: "Durable (persist messages)",
        type: "boolean",
        default: true,
      },
      {
        key: "retention",
        label: "Retention (hours)",
        type: "number",
        default: 168,
      },
    ],
  },
  {
    id: "auth-service",
    group: "Services",
    icon: "üîê",
    label: "Auth Service",
    description: "Authentication & session management",
    tags: ["authentication", "authorization", "auth", "oauth", "jwt", "sso", "login", "security"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Auth Service",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      { key: "oauth", label: "OAuth Enabled", type: "boolean", default: true },
      {
        key: "sessions",
        label: "Session Store",
        type: "select",
        default: "redis",
        options: ["redis", "database", "none"],
      },
      {
        key: "tokenTTL",
        label: "Token TTL (minutes)",
        type: "number",
        default: 60,
      },
      { key: "mfa", label: "MFA Required", type: "boolean", default: false },
    ],
  },
  {
    id: "cdn",
    group: "Delivery",
    icon: "üöÄ",
    label: "CDN",
    description: "Content delivery network",
    tags: ["content delivery", "cloudflare", "akamai", "fastly", "edge", "caching", "cdn"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "CDN",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "provider",
        label: "Provider",
        type: "select",
        default: "Cloudflare",
        options: ["Cloudflare", "Akamai", "Fastly", "AWS CloudFront"],
      },
      {
        key: "ttl",
        label: "Edge TTL (seconds)",
        type: "number",
        default: 3600,
      },
      {
        key: "cacheInvalidation",
        label: "Cache Invalidation (manual)",
        type: "boolean",
        default: true,
      },
    ],
  },
  {
    id: "search",
    group: "Services",
    icon: "üîé",
    label: "Search",
    description: "Search engine & indexing",
    tags: ["elasticsearch", "opensearch", "search engine", "indexing", "full-text", "lucene"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Search",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "engine",
        label: "Engine",
        type: "select",
        default: "elasticsearch",
        options: ["elasticsearch", "opensearch", "meilisearch"],
      },
      { key: "replicas", label: "Replicas", type: "number", default: 2 },
      {
        key: "indexing",
        label: "Real-time indexing",
        type: "boolean",
        default: true,
      },
      { key: "shards", label: "Shards", type: "number", default: 5 },
    ],
  },
  {
    id: "queue",
    group: "Messaging",
    icon: "üìÆ",
    label: "Queue",
    description: "Task queue",
    tags: ["task queue", "job queue", "sqs", "celery", "worker queue", "async"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Queue",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "visibilityTimeout",
        label: "Visibility Timeout (seconds)",
        type: "number",
        default: 30,
      },
      { key: "maxRetries", label: "Max Retries", type: "number", default: 5 },
      {
        key: "durable",
        label: "Durable (persist tasks)",
        type: "boolean",
        default: true,
      },
      {
        key: "backoff",
        label: "Backoff Strategy",
        type: "select",
        default: "exponential",
        options: ["fixed", "linear", "exponential"],
      },
    ],
  },
  {
    id: "analytics",
    group: "Data Layer",
    icon: "üìä",
    label: "Analytics",
    description: "Event analytics pipeline",
    tags: ["data analytics", "metrics", "events", "tracking", "bi", "business intelligence"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Analytics",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "retentionDays",
        label: "Retention (days)",
        type: "number",
        default: 90,
      },
      {
        key: "samplingRate",
        label: "Sampling Rate (%)",
        type: "number",
        default: 100,
      },
      {
        key: "realTime",
        label: "Real-time processing",
        type: "boolean",
        default: true,
      },
      {
        key: "storage",
        label: "Storage",
        type: "select",
        default: "s3",
        options: ["s3", "gcs", "azure_blob"],
      },
    ],
  },

  // DNS Resolution & Network Entry group
  {
    id: "root-nameserver",
    group: "DNS & Network",
    icon: "üåç",
    label: "Root Nameserver",
    description: "Top-level DNS resolver",
    tags: ["dns", "nameserver", "root", "resolver", "domain"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Root Nameserver",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "ttl",
        label: "TTL (seconds)",
        type: "number",
        default: 172800,
      },
      {
        key: "dnssec",
        label: "DNSSEC Enabled",
        type: "boolean",
        default: true,
      },
    ],
  },
  {
    id: "tld-nameserver",
    group: "DNS & Network",
    icon: "üîó",
    label: "TLD Nameserver",
    description: "Top-level domain nameserver",
    tags: ["dns", "tld", "top-level domain", "nameserver", ".com", ".org"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "TLD Nameserver",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "tld",
        label: "TLD",
        type: "select",
        default: ".com",
        options: [".com", ".org", ".net", ".io", ".dev"],
      },
      {
        key: "ttl",
        label: "TTL (seconds)",
        type: "number",
        default: 86400,
      },
    ],
  },
  {
    id: "authoritative-nameserver",
    group: "DNS & Network",
    icon: "üì°",
    label: "Authoritative Nameserver",
    description: "Domain-specific DNS server",
    tags: ["dns", "authoritative", "nameserver", "domain", "records"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Authoritative Nameserver",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "records",
        label: "DNS Records",
        type: "number",
        default: 100,
      },
      {
        key: "ttl",
        label: "TTL (seconds)",
        type: "number",
        default: 3600,
      },
      {
        key: "anycast",
        label: "Anycast Enabled",
        type: "boolean",
        default: true,
      },
    ],
  },
  {
    id: "isp",
    group: "DNS & Network",
    icon: "üåê",
    label: "ISP",
    description: "Internet Service Provider",
    tags: ["internet", "isp", "network", "provider", "connectivity"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "ISP",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "dnsCache",
        label: "DNS Cache Enabled",
        type: "boolean",
        default: true,
      },
      {
        key: "bandwidth",
        label: "Bandwidth (Gbps)",
        type: "number",
        default: 10,
      },
    ],
  },

  // API Gateway
  {
    id: "api-gateway",
    group: "Networking",
    icon: "üö™",
    label: "API Gateway",
    description: "Central API entry point",
    tags: ["api", "gateway", "rest", "graphql", "entry point", "routing", "kong", "apigee"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "API Gateway",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "inputValidation",
        label: "Input Validation",
        type: "boolean",
        default: true,
      },
      {
        key: "authentication",
        label: "Authentication",
        type: "select",
        default: "OAuth 2.0",
        options: ["OAuth 2.0", "JWT", "API Key", "Basic Auth"],
      },
      {
        key: "rateLimiting",
        label: "Rate Limiting",
        type: "boolean",
        default: true,
      },
      {
        key: "requestsPerSecond",
        label: "Max Requests/Second",
        type: "number",
        default: 1000,
      },
      {
        key: "tlsTermination",
        label: "TLS Termination",
        type: "boolean",
        default: true,
      },
      {
        key: "deduplication",
        label: "Request Deduplication",
        type: "boolean",
        default: true,
      },
      {
        key: "throttling",
        label: "Throttling Enabled",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Message Dispatcher
  {
    id: "message-dispatcher",
    group: "Messaging",
    icon: "üì§",
    label: "Message Dispatcher",
    description: "Message routing & distribution",
    tags: ["message", "dispatcher", "routing", "distribution", "pub/sub"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Message Dispatcher",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "topics",
        label: "Topics",
        type: "number",
        default: 10,
      },
      {
        key: "loadBalancing",
        label: "Load Balancing",
        type: "select",
        default: "round-robin",
        options: ["round-robin", "least-load", "hash-based"],
      },
      {
        key: "partitioning",
        label: "Partitioning Enabled",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Distributed Services
  {
    id: "id-generator",
    group: "Services",
    icon: "üî¢",
    label: "ID Generator",
    description: "Distributed unique ID generation",
    tags: ["id", "uuid", "snowflake", "ulid", "unique", "generator", "distributed"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "ID Generator",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "algorithm",
        label: "Algorithm",
        type: "select",
        default: "Snowflake",
        options: ["Snowflake", "UUID", "ULID", "Auto-Increment"],
      },
      {
        key: "shardId",
        label: "Shard ID",
        type: "number",
        default: 1,
      },
      {
        key: "distributed",
        label: "Distributed",
        type: "boolean",
        default: true,
      },
    ],
  },
  {
    id: "distributed-lock",
    group: "Services",
    icon: "üîí",
    label: "Distributed Lock",
    description: "Resource locking & coordination",
    tags: ["lock", "distributed", "coordination", "mutex", "redis", "etcd", "zookeeper"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Distributed Lock",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "backend",
        label: "Backend",
        type: "select",
        default: "Redis",
        options: ["Redis", "Etcd", "Zookeeper", "Chubby"],
      },
      {
        key: "ttl",
        label: "Lock TTL (seconds)",
        type: "number",
        default: 30,
      },
      {
        key: "fairness",
        label: "Fair Locking",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Storage
  {
    id: "cold-storage",
    group: "Data Layer",
    icon: "‚ùÑÔ∏è",
    label: "Cold Storage",
    description: "Archive & backup storage",
    tags: ["archive", "backup", "glacier", "cold storage", "long-term", "s3 glacier"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Cold Storage",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "provider",
        label: "Provider",
        type: "select",
        default: "AWS Glacier",
        options: ["AWS Glacier", "Azure Archive", "GCP Coldline"],
      },
      {
        key: "retentionDays",
        label: "Retention (days)",
        type: "number",
        default: 2555,
      },
      {
        key: "encryption",
        label: "Encryption at Rest",
        type: "boolean",
        default: true,
      },
    ],
  },
  {
    id: "object-storage",
    group: "Data Layer",
    icon: "üóÉÔ∏è",
    label: "Object Storage",
    description: "S3-compatible object store",
    tags: ["s3", "blob", "object storage", "aws s3", "azure blob", "gcs", "minio"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Object Storage",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "provider",
        label: "Provider",
        type: "select",
        default: "S3",
        options: ["S3", "Azure Blob", "GCS", "MinIO"],
      },
      {
        key: "versioning",
        label: "Versioning",
        type: "boolean",
        default: true,
      },
      {
        key: "checksumValidation",
        label: "Checksum Validation",
        type: "boolean",
        default: true,
      },
      {
        key: "storageGB",
        label: "Storage (GB)",
        type: "number",
        default: 1000,
      },
    ],
  },

  // Processing Workers
  {
    id: "processing-worker",
    group: "Compute",
    icon: "‚öôÔ∏è",
    label: "Processing Worker",
    description: "Background job processor",
    tags: ["worker", "background job", "async", "task processor", "celery", "sidekiq"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Processing Worker",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "tasks",
        label: "Task Types",
        type: "select",
        default: "Media Encoding",
        options: [
          "Media Encoding",
          "Thumbnail Generation",
          "Data Processing",
          "ML Inference",
        ],
      },
      {
        key: "concurrency",
        label: "Concurrent Jobs",
        type: "number",
        default: 10,
      },
      {
        key: "autoscale",
        label: "Auto-scale",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Common Services
  {
    id: "notification-service",
    group: "Services",
    icon: "üîî",
    label: "Notification Service",
    description: "Push notifications & alerts",
    tags: ["notification", "push", "email", "sms", "alerts", "fcm", "apns"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Notification Service",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "channels",
        label: "Channels",
        type: "select",
        default: "Push + Email",
        options: ["Push", "Email", "SMS", "Push + Email", "All"],
      },
      {
        key: "fanout",
        label: "Fan-out Support",
        type: "boolean",
        default: true,
      },
      {
        key: "batching",
        label: "Batch Notifications",
        type: "boolean",
        default: true,
      },
    ],
  },
  {
    id: "recommendation-service",
    group: "Services",
    icon: "üéØ",
    label: "Recommendation",
    description: "ML-based recommendations",
    tags: ["recommendation", "ml", "machine learning", "collaborative filtering", "personalization"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Recommendation",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "algorithm",
        label: "Algorithm",
        type: "select",
        default: "Collaborative Filtering",
        options: ["Collaborative Filtering", "Content-based", "Hybrid"],
      },
      {
        key: "realTime",
        label: "Real-time",
        type: "boolean",
        default: true,
      },
      {
        key: "cacheResults",
        label: "Cache Results",
        type: "boolean",
        default: true,
      },
    ],
  },
  {
    id: "payment-service",
    group: "Services",
    icon: "üí≥",
    label: "Payment Service",
    description: "Payment processing & gateway",
    tags: ["payment", "stripe", "paypal", "transaction", "billing", "checkout", "pci"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Payment Service",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "gateway",
        label: "Gateway",
        type: "select",
        default: "Stripe",
        options: ["Stripe", "PayPal", "Braintree", "Square"],
      },
      {
        key: "pciDss",
        label: "PCI DSS Compliant",
        type: "boolean",
        default: true,
      },
      {
        key: "tokenization",
        label: "Card Tokenization",
        type: "boolean",
        default: true,
      },
      {
        key: "retry",
        label: "Auto-retry Failed",
        type: "boolean",
        default: true,
      },
    ],
  },
  {
    id: "log-processing",
    group: "Services",
    icon: "üìù",
    label: "Log Processing",
    description: "Log aggregation & analysis",
    tags: ["logging", "logs", "elk", "splunk", "aggregation", "analysis", "kibana"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Log Processing",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "pipeline",
        label: "Pipeline",
        type: "select",
        default: "ELK Stack",
        options: ["ELK Stack", "Splunk", "Datadog", "CloudWatch"],
      },
      {
        key: "retentionDays",
        label: "Retention (days)",
        type: "number",
        default: 30,
      },
      {
        key: "indexing",
        label: "Real-time Indexing",
        type: "boolean",
        default: true,
      },
    ],
  },
  {
    id: "pubsub",
    group: "Messaging",
    icon: "üì°",
    label: "Pub/Sub",
    description: "Publish-subscribe messaging",
    tags: ["pubsub", "publish", "subscribe", "messaging", "event", "google pubsub", "sns"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Pub/Sub",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "topics",
        label: "Topics",
        type: "number",
        default: 20,
      },
      {
        key: "fanout",
        label: "Fan-out Support",
        type: "boolean",
        default: true,
      },
      {
        key: "ordering",
        label: "Message Ordering",
        type: "boolean",
        default: false,
      },
      {
        key: "durable",
        label: "Durable Messages",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Frontend Server
  {
    id: "frontend-server",
    group: "Compute",
    icon: "üñ•Ô∏è",
    label: "Frontend Server",
    description: "Client-facing server",
    tags: ["frontend", "server", "websocket", "connection", "client-facing"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Frontend Server",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "inMemoryConnections",
        label: "In-Memory Connections",
        type: "boolean",
        default: true,
      },
      {
        key: "activeConnections",
        label: "Active Connections",
        type: "number",
        default: 10000,
      },
      {
        key: "websockets",
        label: "WebSocket Support",
        type: "boolean",
        default: true,
      },
      {
        key: "instances",
        label: "Instances",
        type: "number",
        default: 3,
      },
    ],
  },

  // Backend Server
  {
    id: "backend-server",
    group: "Compute",
    icon: "‚ö°",
    label: "Backend Server",
    description: "Application logic & microservices",
    tags: ["backend", "server", "microservices", "api", "business logic", "application"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Backend Server",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "architecture",
        label: "Architecture",
        type: "select",
        default: "Microservices",
        options: ["Monolith", "Microservices", "Serverless"],
      },
      {
        key: "instances",
        label: "Instances",
        type: "number",
        default: 5,
      },
      {
        key: "caching",
        label: "Caching Enabled",
        type: "boolean",
        default: true,
      },
      {
        key: "retry",
        label: "Retry Logic",
        type: "boolean",
        default: true,
      },
      {
        key: "bulkOps",
        label: "Bulk Operations",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Edge Server
  {
    id: "edge-server",
    group: "Delivery",
    icon: "üåç",
    label: "Edge Server",
    description: "Edge computing & caching",
    tags: ["edge", "edge computing", "edge network", "cdn", "streaming"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Edge Server",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "scope",
        label: "Scope",
        type: "select",
        default: "Regional",
        options: ["Global", "Regional", "Local"],
      },
      {
        key: "streaming",
        label: "Streaming Support",
        type: "boolean",
        default: true,
      },
      {
        key: "abr",
        label: "ABR (Adaptive Bitrate)",
        type: "boolean",
        default: true,
      },
      {
        key: "staticCache",
        label: "Static Cache",
        type: "boolean",
        default: true,
      },
    ],
  },

  // ========================================
  // MISSING CRITICAL COMPONENTS
  // ========================================

  // Service Mesh
  {
    id: "service-mesh",
    group: "Networking",
    icon: "üï∏Ô∏è",
    label: "Service Mesh",
    description: "Microservices communication layer",
    tags: ["service mesh", "istio", "linkerd", "consul", "mtls", "traffic management"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Service Mesh",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "provider",
        label: "Provider",
        type: "select",
        default: "Istio",
        options: ["Istio", "Linkerd", "Consul", "AWS App Mesh"],
      },
      {
        key: "mtls",
        label: "Mutual TLS",
        type: "boolean",
        default: true,
      },
      {
        key: "tracing",
        label: "Distributed Tracing",
        type: "boolean",
        default: true,
      },
      {
        key: "circuitBreaker",
        label: "Circuit Breaker",
        type: "boolean",
        default: true,
      },
      {
        key: "retryPolicy",
        label: "Retry Policy",
        type: "boolean",
        default: true,
      },
      {
        key: "trafficSplitting",
        label: "Traffic Splitting",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Container Orchestration
  {
    id: "container-orchestrator",
    group: "Compute",
    icon: "üê≥",
    label: "Container Orchestrator",
    description: "Container management & orchestration",
    tags: ["kubernetes", "k8s", "docker", "container", "orchestration", "ecs", "pods"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "K8s Cluster",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "platform",
        label: "Platform",
        type: "select",
        default: "Kubernetes",
        options: ["Kubernetes", "ECS", "Docker Swarm", "Nomad"],
      },
      {
        key: "nodes",
        label: "Worker Nodes",
        type: "number",
        default: 3,
      },
      {
        key: "autoscaling",
        label: "Auto-scaling (HPA)",
        type: "boolean",
        default: true,
      },
      {
        key: "ingress",
        label: "Ingress Controller",
        type: "boolean",
        default: true,
      },
      {
        key: "monitoring",
        label: "Monitoring (Prometheus)",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Serverless Function
  {
    id: "serverless-function",
    group: "Compute",
    icon: "Œª",
    label: "Serverless Function",
    description: "Event-driven compute",
    tags: ["lambda", "serverless", "function app", "cloud function", "faas", "azure functions", "event-driven"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Lambda Function",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "runtime",
        label: "Runtime",
        type: "select",
        default: "Node.js",
        options: ["Node.js", "Python", "Java", "Go", ".NET", "Ruby"],
      },
      {
        key: "memoryMB",
        label: "Memory (MB)",
        type: "number",
        default: 512,
      },
      {
        key: "timeout",
        label: "Timeout (seconds)",
        type: "number",
        default: 30,
      },
      {
        key: "concurrency",
        label: "Concurrent Executions",
        type: "number",
        default: 100,
      },
      {
        key: "coldStart",
        label: "Cold Start Optimization",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Reverse Proxy
  {
    id: "reverse-proxy",
    group: "Networking",
    icon: "üîÄ",
    label: "Reverse Proxy",
    description: "Request routing & caching",
    tags: ["reverse proxy", "nginx", "haproxy", "envoy", "traefik", "proxy"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Reverse Proxy",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "server",
        label: "Server",
        type: "select",
        default: "Nginx",
        options: ["Nginx", "HAProxy", "Envoy", "Traefik"],
      },
      {
        key: "caching",
        label: "Response Caching",
        type: "boolean",
        default: true,
      },
      {
        key: "compression",
        label: "Compression (gzip/brotli)",
        type: "boolean",
        default: true,
      },
      {
        key: "ssl",
        label: "SSL/TLS",
        type: "boolean",
        default: true,
      },
      {
        key: "rateLimiting",
        label: "Rate Limiting",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Stream Processing
  {
    id: "stream-processor",
    group: "Data Layer",
    icon: "üåä",
    label: "Stream Processor",
    description: "Real-time data processing",
    tags: ["stream", "kafka streams", "flink", "spark streaming", "kinesis", "real-time"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Stream Processor",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "engine",
        label: "Engine",
        type: "select",
        default: "Kafka Streams",
        options: [
          "Kafka Streams",
          "Apache Flink",
          "Spark Streaming",
          "AWS Kinesis",
        ],
      },
      {
        key: "throughput",
        label: "Throughput (events/sec)",
        type: "number",
        default: 10000,
      },
      {
        key: "windowing",
        label: "Windowing Support",
        type: "boolean",
        default: true,
      },
      {
        key: "stateful",
        label: "Stateful Processing",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Data Warehouse
  {
    id: "data-warehouse",
    group: "Data Layer",
    icon: "üè≠",
    label: "Data Warehouse",
    description: "OLAP & analytics storage",
    tags: ["data warehouse", "snowflake", "redshift", "bigquery", "olap", "analytics"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Data Warehouse",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "platform",
        label: "Platform",
        type: "select",
        default: "Snowflake",
        options: ["Snowflake", "Redshift", "BigQuery", "Synapse"],
      },
      {
        key: "storageTB",
        label: "Storage (TB)",
        type: "number",
        default: 10,
      },
      {
        key: "compression",
        label: "Column Compression",
        type: "boolean",
        default: true,
      },
      {
        key: "partitioning",
        label: "Data Partitioning",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Monitoring & Observability
  {
    id: "monitoring",
    group: "Observability",
    icon: "üìà",
    label: "Monitoring",
    description: "Metrics & alerting",
    tags: ["monitoring", "prometheus", "grafana", "datadog", "metrics", "alerts", "observability"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Monitoring",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "stack",
        label: "Stack",
        type: "select",
        default: "Prometheus + Grafana",
        options: ["Prometheus + Grafana", "Datadog", "New Relic", "CloudWatch"],
      },
      {
        key: "metrics",
        label: "Metrics Collection",
        type: "boolean",
        default: true,
      },
      {
        key: "alerts",
        label: "Alerting",
        type: "boolean",
        default: true,
      },
      {
        key: "retention",
        label: "Retention (days)",
        type: "number",
        default: 30,
      },
    ],
  },

  // Distributed Tracing
  {
    id: "tracing",
    group: "Observability",
    icon: "üîç",
    label: "Distributed Tracing",
    description: "Request flow tracking",
    tags: ["tracing", "jaeger", "zipkin", "distributed tracing", "apm", "x-ray"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Tracing",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "platform",
        label: "Platform",
        type: "select",
        default: "Jaeger",
        options: ["Jaeger", "Zipkin", "AWS X-Ray", "Datadog APM"],
      },
      {
        key: "sampling",
        label: "Sampling Rate (%)",
        type: "number",
        default: 10,
      },
      {
        key: "retention",
        label: "Retention (days)",
        type: "number",
        default: 7,
      },
    ],
  },

  // Rate Limiter
  {
    id: "rate-limiter",
    group: "Services",
    icon: "üö¶",
    label: "Rate Limiter",
    description: "Request throttling service",
    tags: ["rate limit", "throttling", "rate limiter", "token bucket", "quota"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Rate Limiter",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "algorithm",
        label: "Algorithm",
        type: "select",
        default: "Token Bucket",
        options: [
          "Token Bucket",
          "Leaky Bucket",
          "Fixed Window",
          "Sliding Window",
        ],
      },
      {
        key: "requestsPerMinute",
        label: "Requests/Minute",
        type: "number",
        default: 1000,
      },
      {
        key: "distributed",
        label: "Distributed",
        type: "boolean",
        default: true,
      },
      {
        key: "backend",
        label: "Backend",
        type: "select",
        default: "Redis",
        options: ["Redis", "In-Memory", "Database"],
      },
    ],
  },

  // Circuit Breaker
  {
    id: "circuit-breaker",
    group: "Services",
    icon: "‚ö°",
    label: "Circuit Breaker",
    description: "Fault tolerance & resilience",
    tags: ["circuit breaker", "fault tolerance", "resilience", "hystrix", "fallback"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Circuit Breaker",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "failureThreshold",
        label: "Failure Threshold (%)",
        type: "number",
        default: 50,
      },
      {
        key: "timeout",
        label: "Timeout (ms)",
        type: "number",
        default: 5000,
      },
      {
        key: "fallback",
        label: "Fallback Strategy",
        type: "boolean",
        default: true,
      },
    ],
  },

  // File Storage
  {
    id: "file-storage",
    group: "Data Layer",
    icon: "üìÇ",
    label: "File Storage",
    description: "Shared file system",
    tags: ["file storage", "nfs", "efs", "shared storage", "file system"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "File Storage",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "type",
        label: "Type",
        type: "select",
        default: "NFS",
        options: ["NFS", "EFS", "Azure Files", "GCP Filestore"],
      },
      {
        key: "storageTB",
        label: "Storage (TB)",
        type: "number",
        default: 1,
      },
      {
        key: "throughput",
        label: "Throughput (MB/s)",
        type: "number",
        default: 100,
      },
    ],
  },

  // VPN Gateway
  {
    id: "vpn-gateway",
    group: "Networking",
    icon: "üîê",
    label: "VPN Gateway",
    description: "Secure network connection",
    tags: ["vpn", "gateway", "ipsec", "openvpn", "wireguard", "secure connection"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "VPN Gateway",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "protocol",
        label: "Protocol",
        type: "select",
        default: "IPSec",
        options: ["IPSec", "OpenVPN", "WireGuard"],
      },
      {
        key: "encryption",
        label: "Encryption",
        type: "select",
        default: "AES-256",
        options: ["AES-128", "AES-256", "ChaCha20"],
      },
      {
        key: "tunnels",
        label: "Active Tunnels",
        type: "number",
        default: 2,
      },
    ],
  },

  // Firewall
  {
    id: "firewall",
    group: "Security",
    icon: "üõ°Ô∏è",
    label: "Firewall",
    description: "Network security & filtering",
    tags: ["firewall", "waf", "security", "ips", "network firewall", "filtering"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Firewall",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "type",
        label: "Type",
        type: "select",
        default: "WAF",
        options: ["Network Firewall", "WAF", "Next-Gen Firewall"],
      },
      {
        key: "rules",
        label: "Active Rules",
        type: "number",
        default: 50,
      },
      {
        key: "ips",
        label: "IPS Enabled",
        type: "boolean",
        default: true,
      },
      {
        key: "logging",
        label: "Traffic Logging",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Secrets Manager
  {
    id: "secrets-manager",
    group: "Security",
    icon: "üîë",
    label: "Secrets Manager",
    description: "Credentials & secrets storage",
    tags: ["secrets", "vault", "credentials", "key management", "hashicorp vault", "secrets manager"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Secrets Manager",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "provider",
        label: "Provider",
        type: "select",
        default: "HashiCorp Vault",
        options: ["HashiCorp Vault", "AWS Secrets Manager", "Azure Key Vault"],
      },
      {
        key: "rotation",
        label: "Auto Rotation",
        type: "boolean",
        default: true,
      },
      {
        key: "encryption",
        label: "Encryption at Rest",
        type: "boolean",
        default: true,
      },
      {
        key: "audit",
        label: "Audit Logging",
        type: "boolean",
        default: true,
      },
    ],
  },

  // Email Service
  {
    id: "email-service",
    group: "Services",
    icon: "üìß",
    label: "Email Service",
    description: "Transactional email delivery",
    tags: ["email", "sendgrid", "ses", "mailgun", "smtp", "transactional email"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "Email Service",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "provider",
        label: "Provider",
        type: "select",
        default: "SendGrid",
        options: ["SendGrid", "AWS SES", "Mailgun", "Postmark"],
      },
      {
        key: "templates",
        label: "Template Support",
        type: "boolean",
        default: true,
      },
      {
        key: "tracking",
        label: "Open/Click Tracking",
        type: "boolean",
        default: true,
      },
      {
        key: "bounceHandling",
        label: "Bounce Handling",
        type: "boolean",
        default: true,
      },
    ],
  },

  // SMS Service
  {
    id: "sms-service",
    group: "Services",
    icon: "üí¨",
    label: "SMS Service",
    description: "SMS notifications & OTP",
    tags: ["sms", "twilio", "sns", "text message", "otp", "vonage"],
    properties: [
      {
        key: "componentName",
        label: "Component Name",
        type: "text",
        placeholder: "Enter component name",
        default: "SMS Service",
      },
      {
        key: "description",
        label: "Description",
        type: "textarea",
        placeholder: "A brief description of the component",
        default: "",
      },
      {
        key: "provider",
        label: "Provider",
        type: "select",
        default: "Twilio",
        options: ["Twilio", "AWS SNS", "Vonage", "MessageBird"],
      },
      {
        key: "otp",
        label: "OTP Support",
        type: "boolean",
        default: true,
      },
      {
        key: "deliveryReports",
        label: "Delivery Reports",
        type: "boolean",
        default: true,
      },
    ],
  },
];
